// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should generate mock data functions 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        abcStatus: overrides && overrides.hasOwnProperty('abcStatus') ? overrides.abcStatus! : AbcStatus.HasAbcStatus,
    };
};
"
`;

exports[`should generate mock data functions with external types file import 1`] = `
"/* eslint-disable @typescript-eslint/no-use-before-define,@typescript-eslint/no-unused-vars,no-prototype-builtins */
import { ABCType, Avatar, UpdateUserInput, User, ABCStatus, Status } from './types/graphql';

export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        abcStatus: overrides && overrides.hasOwnProperty('abcStatus') ? overrides.abcStatus! : AbcStatus.HasAbcStatus,
    };
};
"
`;

exports[`should generate mock data with as-is enum if enumValues is "keep" 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.ONLINE,
        abcStatus: overrides && overrides.hasOwnProperty('abcStatus') ? overrides.abcStatus! : AbcStatus.hasABCStatus,
    };
};
"
`;

exports[`should generate mock data with as-is types if typenames is "keep" 1`] = `
"
export const anABCType = (overrides?: Partial<ABCType>): ABCType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        abcStatus: overrides && overrides.hasOwnProperty('abcStatus') ? overrides.abcStatus! : ABCStatus.HasAbcStatus,
    };
};
"
`;

exports[`should generate mock data with pascalCase enum if enumValues is "pascal-case#pascalCase" 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        abcStatus: overrides && overrides.hasOwnProperty('abcStatus') ? overrides.abcStatus! : AbcStatus.HasAbcStatus,
    };
};
"
`;

exports[`should generate mock data with pascalCase types by default 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        abcStatus: overrides && overrides.hasOwnProperty('abcStatus') ? overrides.abcStatus! : AbcStatus.HasAbcStatus,
    };
};
"
`;

exports[`should generate mock data with typename if addTypename is true 1`] = `
"/* eslint-disable @typescript-eslint/no-use-before-define,@typescript-eslint/no-unused-vars,no-prototype-builtins */
import { ABCType, Avatar, UpdateUserInput, User, ABCStatus, Status } from './types/graphql';

export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        __typename: 'AbcType',
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        __typename: 'Avatar',
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        __typename: 'User',
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        abcStatus: overrides && overrides.hasOwnProperty('abcStatus') ? overrides.abcStatus! : AbcStatus.HasAbcStatus,
    };
};
"
`;

exports[`should generate mock data with upperCase enum if enumValues is "upper-case#upperCase" 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.ONLINE,
        abcStatus: overrides && overrides.hasOwnProperty('abcStatus') ? overrides.abcStatus! : AbcStatus.HASABCSTATUS,
    };
};
"
`;

exports[`should generate mock data with upperCase types if typenames is "upper-case#upperCase" 1`] = `
"
export const anABCTYPE = (overrides?: Partial<ABCTYPE>): ABCTYPE => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAVATAR = (overrides?: Partial<AVATAR>): AVATAR => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aUPDATEUSERINPUT = (overrides?: Partial<UPDATEUSERINPUT>): UPDATEUSERINPUT => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUSER = (overrides?: Partial<USER>): USER => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : STATUS.Online,
        abcStatus: overrides && overrides.hasOwnProperty('abcStatus') ? overrides.abcStatus! : ABCSTATUS.HasAbcStatus,
    };
};
"
`;

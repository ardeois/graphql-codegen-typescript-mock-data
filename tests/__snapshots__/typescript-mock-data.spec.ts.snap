// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should generate mock data functions 1`] = `
"
export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        get id() { return overrides && overrides.id ? overrides.id : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38'},
        get url() { return overrides && overrides.url ? overrides.url : 'aliquid'},
    };
};

export const aUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        get id() { return overrides && overrides.id ? overrides.id : '1d6a9360-c92b-4660-8e5f-04155047bddc'},
        get login() { return overrides && overrides.login ? overrides.login : 'qui'},
        get avatar() { return overrides && overrides.avatar ? overrides.avatar : anAvatar()},
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        get id() { return overrides && overrides.id ? overrides.id : 'a5756f00-41a6-422a-8a7d-d13ee6a63750'},
        get login() { return overrides && overrides.login ? overrides.login : 'libero'},
        get avatar() { return overrides && overrides.avatar ? overrides.avatar : anAvatar()},
        get status() { return overrides && overrides.status ? overrides.status : Status.ONLINE},
    };
};
"
`;

exports[`should generate mock data functions with external types file import 1`] = `
"/* eslint-disable @typescript-eslint/no-use-before-define,@typescript-eslint/no-unused-vars */
import { Avatar, UpdateUserInput, User, Status } from './types/graphql';

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        get id() { return overrides && overrides.id ? overrides.id : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38'},
        get url() { return overrides && overrides.url ? overrides.url : 'aliquid'},
    };
};

export const aUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        get id() { return overrides && overrides.id ? overrides.id : '1d6a9360-c92b-4660-8e5f-04155047bddc'},
        get login() { return overrides && overrides.login ? overrides.login : 'qui'},
        get avatar() { return overrides && overrides.avatar ? overrides.avatar : anAvatar()},
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        get id() { return overrides && overrides.id ? overrides.id : 'a5756f00-41a6-422a-8a7d-d13ee6a63750'},
        get login() { return overrides && overrides.login ? overrides.login : 'libero'},
        get avatar() { return overrides && overrides.avatar ? overrides.avatar : anAvatar()},
        get status() { return overrides && overrides.status ? overrides.status : Status.ONLINE},
    };
};
"
`;

exports[`should generate mock data with pascalCase enum if enumValues is "pascal-case#pascalCase" 1`] = `
"/* eslint-disable @typescript-eslint/no-use-before-define,@typescript-eslint/no-unused-vars */
import { Avatar, UpdateUserInput, User, Status } from './types/graphql';

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        get id() { return overrides && overrides.id ? overrides.id : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38'},
        get url() { return overrides && overrides.url ? overrides.url : 'aliquid'},
    };
};

export const aUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        get id() { return overrides && overrides.id ? overrides.id : '1d6a9360-c92b-4660-8e5f-04155047bddc'},
        get login() { return overrides && overrides.login ? overrides.login : 'qui'},
        get avatar() { return overrides && overrides.avatar ? overrides.avatar : anAvatar()},
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        get id() { return overrides && overrides.id ? overrides.id : 'a5756f00-41a6-422a-8a7d-d13ee6a63750'},
        get login() { return overrides && overrides.login ? overrides.login : 'libero'},
        get avatar() { return overrides && overrides.avatar ? overrides.avatar : anAvatar()},
        get status() { return overrides && overrides.status ? overrides.status : Status.Online},
    };
};
"
`;

exports[`should generate mock data with typename if addTypename is true 1`] = `
"/* eslint-disable @typescript-eslint/no-use-before-define,@typescript-eslint/no-unused-vars */
import { Avatar, UpdateUserInput, User, Status } from './types/graphql';

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        __typename: 'Avatar',
        get id() { return overrides && overrides.id ? overrides.id : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38'},
        get url() { return overrides && overrides.url ? overrides.url : 'aliquid'},
    };
};

export const aUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        get id() { return overrides && overrides.id ? overrides.id : '1d6a9360-c92b-4660-8e5f-04155047bddc'},
        get login() { return overrides && overrides.login ? overrides.login : 'qui'},
        get avatar() { return overrides && overrides.avatar ? overrides.avatar : anAvatar()},
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        __typename: 'User',
        get id() { return overrides && overrides.id ? overrides.id : 'a5756f00-41a6-422a-8a7d-d13ee6a63750'},
        get login() { return overrides && overrides.login ? overrides.login : 'libero'},
        get avatar() { return overrides && overrides.avatar ? overrides.avatar : anAvatar()},
        get status() { return overrides && overrides.status ? overrides.status : Status.ONLINE},
    };
};
"
`;

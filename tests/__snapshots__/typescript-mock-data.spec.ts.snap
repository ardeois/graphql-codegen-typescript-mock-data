// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should add custom prefix if the \`prefix\` config option is specified 1`] = `
"
export const mockAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const mockAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const mockCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const mockMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : mockUser(),
    };
};

export const mockQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : mockUser(),
    };
};

export const mockUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : mockAvatar(),
    };
};

export const mockUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : mockAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : mockCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : mockAvatar(),
    };
};

export const mockWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : mockAvatar(),
    };
};
"
`;

exports[`should add enumsPrefix to all enums when option is specified 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Api.Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : Api.AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should add enumsPrefix to imports 1`] = `
"/* eslint-disable @typescript-eslint/no-use-before-define,@typescript-eslint/no-unused-vars,no-prototype-builtins */
import { AbcType, Avatar, CamelCaseThing, Mutation, Query, UpdateUserInput, User, WithAvatar, Api } from './types/graphql';

export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Api.Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : Api.AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should add typesPrefix and enumsPrefix to imports 1`] = `
"/* eslint-disable @typescript-eslint/no-use-before-define,@typescript-eslint/no-unused-vars,no-prototype-builtins */
import { Api } from './types/graphql';

export const anAbcType = (overrides?: Partial<Api.AbcType>): Api.AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Api.Avatar>): Api.Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<Api.CamelCaseThing>): Api.CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Api.Mutation>): Api.Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Api.Query>): Api.Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<Api.UpdateUserInput>): Api.UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<Api.User>): Api.User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Api.Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : Api.AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<Api.WithAvatar>): Api.WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should add typesPrefix to all types when option is specified 1`] = `
"
export const anAbcType = (overrides?: Partial<Api.AbcType>): Api.AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Api.Avatar>): Api.Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<Api.CamelCaseThing>): Api.CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Api.Mutation>): Api.Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Api.Query>): Api.Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<Api.UpdateUserInput>): Api.UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<Api.User>): Api.User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<Api.WithAvatar>): Api.WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should add typesPrefix to imports 1`] = `
"/* eslint-disable @typescript-eslint/no-use-before-define,@typescript-eslint/no-unused-vars,no-prototype-builtins */
import { Api, AbcStatus, Status } from './types/graphql';

export const anAbcType = (overrides?: Partial<Api.AbcType>): Api.AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Api.Avatar>): Api.Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<Api.CamelCaseThing>): Api.CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Api.Mutation>): Api.Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Api.Query>): Api.Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<Api.UpdateUserInput>): Api.UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<Api.User>): Api.User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<Api.WithAvatar>): Api.WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should correctly generate the \`casual\` data for a function with arguments scalar mapping 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : '1977-06-26',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should correctly generate the \`casual\` data for a function with one argument scalar mapping 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : '1977-06-26',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should correctly generate the \`casual\` data for a non-string scalar mapping 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : [41,98,185],
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should correctly generate the \`casual\` data for a scalar mapping of type string 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'Mohamed.Nader@Kiehn.io',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should correctly use custom generator as default value 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : myValueGenerator(),
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should generate mock data functions 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should generate mock data functions with external types file import 1`] = `
"/* eslint-disable @typescript-eslint/no-use-before-define,@typescript-eslint/no-unused-vars,no-prototype-builtins */
import { AbcType, Avatar, CamelCaseThing, Mutation, Query, UpdateUserInput, User, WithAvatar, AbcStatus, Status } from './types/graphql';

export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should generate mock data functions with scalars 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should generate mock data with PascalCase enum values by default 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should generate mock data with PascalCase enum values if enumValues is "pascal-case#pascalCase" 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should generate mock data with PascalCase enum values if typenames is "pascal-case#pascalCase" 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should generate mock data with PascalCase types and enums by default 1`] = `
"/* eslint-disable @typescript-eslint/no-use-before-define,@typescript-eslint/no-unused-vars,no-prototype-builtins */
import { AbcType, Avatar, CamelCaseThing, Mutation, Query, UpdateUserInput, User, WithAvatar, AbcStatus, Status } from './types/graphql';

export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should generate mock data with as-is enum values if enumValues is "keep" 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.ONLINE,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.hasXYZStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should generate mock data with as-is types and enums if typenames is "keep" 1`] = `
"
export const anABCType = (overrides?: Partial<ABCType>): ABCType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const acamelCaseThing = (overrides?: Partial<camelCaseThing>): camelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : ABCStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : acamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should generate mock data with typename if addTypename is true 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): { __typename: 'AbcType' } & AbcType => {
    return {
        __typename: 'AbcType',
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): { __typename: 'Avatar' } & Avatar => {
    return {
        __typename: 'Avatar',
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): { __typename: 'CamelCaseThing' } & CamelCaseThing => {
    return {
        __typename: 'CamelCaseThing',
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): { __typename: 'Mutation' } & Mutation => {
    return {
        __typename: 'Mutation',
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): { __typename: 'Query' } & Query => {
    return {
        __typename: 'Query',
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): { __typename: 'User' } & User => {
    return {
        __typename: 'User',
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): { __typename: 'WithAvatar' } & WithAvatar => {
    return {
        __typename: 'WithAvatar',
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should generate mock data with upperCase enum values if enumValues is "upper-case#upperCase" 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.ONLINE,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HASXYZSTATUS,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should generate mock data with upperCase types and enums if typenames is "upper-case#upperCase" 1`] = `
"
export const anABCTYPE = (overrides?: Partial<ABCTYPE>): ABCTYPE => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAVATAR = (overrides?: Partial<AVATAR>): AVATAR => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCAMELCASETHING = (overrides?: Partial<CAMELCASETHING>): CAMELCASETHING => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMUTATION = (overrides?: Partial<MUTATION>): MUTATION => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUSER(),
    };
};

export const aQUERY = (overrides?: Partial<QUERY>): QUERY => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUSER(),
    };
};

export const anUPDATEUSERINPUT = (overrides?: Partial<UPDATEUSERINPUT>): UPDATEUSERINPUT => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAVATAR(),
    };
};

export const aUSER = (overrides?: Partial<USER>): USER => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAVATAR(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : STATUS.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : ABCSTATUS.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCAMELCASETHING(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAVATAR(),
    };
};

export const aWITHAVATAR = (overrides?: Partial<WITHAVATAR>): WITHAVATAR => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAVATAR(),
    };
};
"
`;

exports[`should generate mock data with upperCase types and imports if typenames is "upper-case#upperCase" 1`] = `
"/* eslint-disable @typescript-eslint/no-use-before-define,@typescript-eslint/no-unused-vars,no-prototype-builtins */
import { ABCTYPE, AVATAR, CAMELCASETHING, MUTATION, QUERY, UPDATEUSERINPUT, USER, WITHAVATAR, ABCSTATUS, STATUS } from './types/graphql';

export const anABCTYPE = (overrides?: Partial<ABCTYPE>): ABCTYPE => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAVATAR = (overrides?: Partial<AVATAR>): AVATAR => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCAMELCASETHING = (overrides?: Partial<CAMELCASETHING>): CAMELCASETHING => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMUTATION = (overrides?: Partial<MUTATION>): MUTATION => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUSER(),
    };
};

export const aQUERY = (overrides?: Partial<QUERY>): QUERY => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUSER(),
    };
};

export const anUPDATEUSERINPUT = (overrides?: Partial<UPDATEUSERINPUT>): UPDATEUSERINPUT => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAVATAR(),
    };
};

export const aUSER = (overrides?: Partial<USER>): USER => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAVATAR(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : STATUS.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : ABCSTATUS.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCAMELCASETHING(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAVATAR(),
    };
};

export const aWITHAVATAR = (overrides?: Partial<WITHAVATAR>): WITHAVATAR => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAVATAR(),
    };
};
"
`;

exports[`should not merge imports into one if enumsPrefix does not contain dots 1`] = `
"/* eslint-disable @typescript-eslint/no-use-before-define,@typescript-eslint/no-unused-vars,no-prototype-builtins */
import { AbcType, Avatar, CamelCaseThing, Mutation, Query, UpdateUserInput, User, WithAvatar, ApiAbcStatus, ApiStatus } from './types/graphql';

export const anAbcType = (overrides?: Partial<AbcType>): AbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>): Avatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>): CamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>): Mutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<Query>): Query => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>): UpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<User>): User => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : ApiStatus.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : ApiAbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>): WithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should not merge imports into one if typesPrefix does not contain dots 1`] = `
"/* eslint-disable @typescript-eslint/no-use-before-define,@typescript-eslint/no-unused-vars,no-prototype-builtins */
import { ApiAbcType, ApiAvatar, ApiCamelCaseThing, ApiMutation, ApiQuery, ApiUpdateUserInput, ApiUser, ApiWithAvatar, AbcStatus, Status } from './types/graphql';

export const anAbcType = (overrides?: Partial<ApiAbcType>): ApiAbcType => {
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<ApiAvatar>): ApiAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<ApiCamelCaseThing>): ApiCamelCaseThing => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<ApiMutation>): ApiMutation => {
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : aUser(),
    };
};

export const aQuery = (overrides?: Partial<ApiQuery>): ApiQuery => {
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : aUser(),
    };
};

export const anUpdateUserInput = (overrides?: Partial<ApiUpdateUserInput>): ApiUpdateUserInput => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};

export const aUser = (overrides?: Partial<ApiUser>): ApiUser => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : aCamelCaseThing(),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : anAvatar(),
    };
};

export const aWithAvatar = (overrides?: Partial<ApiWithAvatar>): ApiWithAvatar => {
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : anAvatar(),
    };
};
"
`;

exports[`should use relationshipsToOmit argument to terminate circular relationships with terminateCircularRelationships enabled 1`] = `
"
export const anAbcType = (overrides?: Partial<AbcType>, relationshipsToOmit: Set<string> = new Set()): AbcType => {
    relationshipsToOmit.add('AbcType');
    return {
        abc: overrides && overrides.hasOwnProperty('abc') ? overrides.abc! : 'sit',
    };
};

export const anAvatar = (overrides?: Partial<Avatar>, relationshipsToOmit: Set<string> = new Set()): Avatar => {
    relationshipsToOmit.add('Avatar');
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '0550ff93-dd31-49b4-8c38-ff1cb68bdc38',
        url: overrides && overrides.hasOwnProperty('url') ? overrides.url! : 'aliquid',
    };
};

export const aCamelCaseThing = (overrides?: Partial<CamelCaseThing>, relationshipsToOmit: Set<string> = new Set()): CamelCaseThing => {
    relationshipsToOmit.add('CamelCaseThing');
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '345b9cf9-00fa-4974-800f-aeee5ee7fd42',
    };
};

export const aMutation = (overrides?: Partial<Mutation>, relationshipsToOmit: Set<string> = new Set()): Mutation => {
    relationshipsToOmit.add('Mutation');
    return {
        updateUser: overrides && overrides.hasOwnProperty('updateUser') ? overrides.updateUser! : relationshipsToOmit.has('User') ? {} as User : aUser({}, relationshipsToOmit),
    };
};

export const aQuery = (overrides?: Partial<Query>, relationshipsToOmit: Set<string> = new Set()): Query => {
    relationshipsToOmit.add('Query');
    return {
        user: overrides && overrides.hasOwnProperty('user') ? overrides.user! : relationshipsToOmit.has('User') ? {} as User : aUser({}, relationshipsToOmit),
    };
};

export const anUpdateUserInput = (overrides?: Partial<UpdateUserInput>, relationshipsToOmit: Set<string> = new Set()): UpdateUserInput => {
    relationshipsToOmit.add('UpdateUserInput');
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '1d6a9360-c92b-4660-8e5f-04155047bddc',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'qui',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : relationshipsToOmit.has('Avatar') ? {} as Avatar : anAvatar({}, relationshipsToOmit),
    };
};

export const aUser = (overrides?: Partial<User>, relationshipsToOmit: Set<string> = new Set()): User => {
    relationshipsToOmit.add('User');
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : 'a5756f00-41a6-422a-8a7d-d13ee6a63750',
        creationDate: overrides && overrides.hasOwnProperty('creationDate') ? overrides.creationDate! : '1970-01-09T16:33:21.532Z',
        login: overrides && overrides.hasOwnProperty('login') ? overrides.login! : 'libero',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : relationshipsToOmit.has('Avatar') ? {} as Avatar : anAvatar({}, relationshipsToOmit),
        status: overrides && overrides.hasOwnProperty('status') ? overrides.status! : Status.Online,
        customStatus: overrides && overrides.hasOwnProperty('customStatus') ? overrides.customStatus! : AbcStatus.HasXyzStatus,
        scalarValue: overrides && overrides.hasOwnProperty('scalarValue') ? overrides.scalarValue! : 'neque',
        camelCaseThing: overrides && overrides.hasOwnProperty('camelCaseThing') ? overrides.camelCaseThing! : relationshipsToOmit.has('camelCaseThing') ? {} as camelCaseThing : aCamelCaseThing({}, relationshipsToOmit),
        unionThing: overrides && overrides.hasOwnProperty('unionThing') ? overrides.unionThing! : relationshipsToOmit.has('Avatar') ? {} as Avatar : anAvatar({}, relationshipsToOmit),
    };
};

export const aWithAvatar = (overrides?: Partial<WithAvatar>, relationshipsToOmit: Set<string> = new Set()): WithAvatar => {
    relationshipsToOmit.add('WithAvatar');
    return {
        id: overrides && overrides.hasOwnProperty('id') ? overrides.id! : '89f515e7-31e0-461d-a230-c4c7f4dafc5c',
        avatar: overrides && overrides.hasOwnProperty('avatar') ? overrides.avatar! : relationshipsToOmit.has('Avatar') ? {} as Avatar : anAvatar({}, relationshipsToOmit),
    };
};
"
`;
